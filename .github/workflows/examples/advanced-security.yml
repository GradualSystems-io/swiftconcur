name: SwiftConcur CI Example - Advanced
on:
  pull_request:
    branches: [ main, develop ]
  push:
    branches: [ main ]

jobs:
  concurrency-check:
    runs-on: macos-latest
    strategy:
      matrix:
        configuration: [Debug, Release]
        
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # For baseline comparison
      
      # Cache Swift packages
      - uses: actions/cache@v3
        with:
          path: .build
          key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}
      
      # Download baseline from main branch
      - name: Download baseline
        if: github.event_name == 'pull_request'
        run: |
          git fetch origin main
          git checkout origin/main -- .swiftconcur/baseline.json || echo "No baseline found"
      
      - uses: swiftconcur/swiftconcur-ci@v1
        id: swiftconcur
        with:
          scheme: 'MyApp'
          workspace-path: 'MyApp.xcworkspace'
          configuration: ${{ matrix.configuration }}
          threshold: 10
          baseline-path: '.swiftconcur/baseline.json'
          context-lines: 5
      
      # Upload results
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: swiftconcur-results-${{ matrix.configuration }}
          path: ${{ steps.swiftconcur.outputs.json-report }}
      
      # Update baseline on main branch
      - name: Update baseline
        if: github.ref == 'refs/heads/main' && matrix.configuration == 'Release'
        run: |
          mkdir -p .swiftconcur
          cp ${{ steps.swiftconcur.outputs.json-report }} .swiftconcur/baseline.json
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add .swiftconcur/baseline.json
          git commit -m "Update SwiftConcur baseline" || echo "No changes"
          git push